


Gadgets
=======


0x000012ca: adc al, 0x24; ret; 
0x0000120a: adc al, 0x51; call eax; 
0x0000120a: adc al, 0x51; call eax; add esp, 0x10; leave; ret; 
0x000017bd: adc al, 0xe8; or eax, 0x81fffffa; ret; 
0x00001684: adc byte ptr [ebx - 0x97fb14], al; add dword ptr [eax], eax; add byte ptr [ebp - 0x20b7b], cl; call dword ptr [eax + 0x6a]; 
0x00001210: adc cl, cl; ret; 
0x00001204: adc edx, dword ptr [ebp - 0x77]; in eax, 0x83; in al, dx; adc al, 0x51; call eax; 
0x00001032: add al, 0; add byte ptr [eax], al; jmp dword ptr [ebx + 8]; 
0x00001329: add al, 0x6a; add byte ptr [ebp - 0x977b], cl; call dword ptr [eax + 0x6a]; 
0x000018cf: add al, 0x6a; add cl, byte ptr [ebp - 0x4000b7b]; call dword ptr [eax + 0x6a]; 
0x0000181a: add al, byte ptr [ebx + 0x7e31f47d]; mov cl, 0x90; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x00001028: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; push dword ptr [ebx + 4]; jmp dword ptr [ebx + 8]; 
0x0000103a: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; jmp dword ptr [ebx + 0xc]; 
0x0000102a: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; push dword ptr [ebx + 4]; jmp dword ptr [ebx + 8]; 
0x0000103c: add byte ptr [eax], al; add byte ptr [eax], al; jmp dword ptr [ebx + 0xc]; 
0x0000102c: add byte ptr [eax], al; add byte ptr [eax], al; push dword ptr [ebx + 4]; jmp dword ptr [ebx + 8]; 
0x0000138a: add byte ptr [eax], al; add byte ptr [ebp + eax - 0x18], dh; fadd qword ptr [0x5d8b0000]; cld; leave; ret; 
0x000012b2: add byte ptr [eax], al; add byte ptr [ecx], al; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x0000100b: add byte ptr [eax], al; add ebx, 0x2f73; mov eax, dword ptr [ebx + 0x6c]; test eax, eax; je 0x101f; call eax; 
0x00001999: add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x000011c4: add byte ptr [eax], al; call 0x1050; hlt; mov ebx, dword ptr [esp]; ret; 
0x0000138b: add byte ptr [eax], al; je 0x1394; call 0x1970; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x00001425: add byte ptr [eax], al; je 0x142e; call 0x1970; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x00001645: add byte ptr [eax], al; je 0x164e; call 0x1970; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x000017a9: add byte ptr [eax], al; je 0x17b2; call 0x1970; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x0000103e: add byte ptr [eax], al; jmp dword ptr [ebx + 0xc]; 
0x00001034: add byte ptr [eax], al; jmp dword ptr [ebx + 8]; 
0x00001011: add byte ptr [eax], al; mov eax, dword ptr [ebx + 0x6c]; test eax, eax; je 0x101f; call eax; 
0x00001392: add byte ptr [eax], al; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x0000102e: add byte ptr [eax], al; push dword ptr [ebx + 4]; jmp dword ptr [ebx + 8]; 
0x00001017: add byte ptr [eax], al; test eax, eax; je 0x101f; call eax; 
0x00001646: add byte ptr [ebp + eax - 0x18], dh; and al, byte ptr [ebx]; add byte ptr [eax], al; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x0000138c: add byte ptr [ebp + eax - 0x18], dh; fadd qword ptr [0x5d8b0000]; cld; leave; ret; 
0x00001426: add byte ptr [ebp + eax - 0x18], dh; inc edx; add eax, 0x5d8b0000; cld; leave; ret; 
0x000017aa: add byte ptr [ebp + eax - 0x18], dh; mov esi, 0x8b000001; pop ebp; cld; leave; ret; 
0x0000168c: add byte ptr [ebp - 0x20b7b], cl; call dword ptr [eax + 0x6a]; 
0x000016f5: add byte ptr [ebp - 0x20b7b], cl; call dword ptr [eax - 0x18]; 
0x0000186d: add byte ptr [ebp - 0x4000b7b], cl; call dword ptr [eax - 0x18]; 
0x00001253: add byte ptr [ebp - 0x7cf58b2e], al; in al, dx; or byte ptr [eax + 0x51], dl; call edx; 
0x0000132b: add byte ptr [ebp - 0x977b], cl; call dword ptr [eax + 0x6a]; 
0x000012b4: add byte ptr [ecx], al; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x000018d1: add cl, byte ptr [ebp - 0x4000b7b]; call dword ptr [eax + 0x6a]; 
0x0000168a: add dword ptr [eax], eax; add byte ptr [ebp - 0x20b7b], cl; call dword ptr [eax + 0x6a]; 
0x00001391: add eax, 0x5d8b0000; cld; leave; ret; 
0x0000100d: add ebx, 0x2f73; mov eax, dword ptr [ebx + 0x6c]; test eax, eax; je 0x101f; call eax; 
0x000012a7: add esp, 0x10; call 0x11e0; mov byte ptr [ebx + 0x88], 1; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x0000120e: add esp, 0x10; leave; ret; 
0x0000125f: add esp, 0x10; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x0000101f: add esp, 8; pop ebx; ret; 
0x0000164a: and al, byte ptr [ebx]; add byte ptr [eax], al; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x000018bf: and dword ptr [ecx], 0xffffffff; call dword ptr [eax - 0x18]; 
0x000011c6: call 0x1050; hlt; mov ebx, dword ptr [esp]; ret; 
0x00001008: call 0x11d0; add ebx, 0x2f73; mov eax, dword ptr [ebx + 0x6c]; test eax, eax; je 0x101f; call eax; 
0x000012aa: call 0x11e0; mov byte ptr [ebx + 0x88], 1; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x0000138f: call 0x1970; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x00001331: call dword ptr [eax + 0x6a]; 
0x000012e7: call dword ptr [eax - 0x18]; 
0x000013f3: call dword ptr [eax - 0x73]; 
0x000013db: call dword ptr [eax - 1]; 
0x000012fa: call dword ptr [ebp - 0x77]; 
0x0000101d: call eax; 
0x0000120c: call eax; add esp, 0x10; leave; ret; 
0x0000101d: call eax; add esp, 8; pop ebx; ret; 
0x0000125d: call edx; 
0x0000125d: call edx; add esp, 0x10; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x00001264: cld; leave; ret; 
0x0000181b: cmp dword ptr [ebp - 0xc], 0x31; jle 0x17d2; nop; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x000018c6: cmpsb byte ptr [esi], byte ptr es:[edi]; idiv edi; inc dword ptr [ebx - 0x137cef3c]; add al, 0x6a; add cl, byte ptr [ebp - 0x4000b7b]; call dword ptr [eax + 0x6a]; 
0x00001010: das; add byte ptr [eax], al; mov eax, dword ptr [ebx + 0x6c]; test eax, eax; je 0x101f; call eax; 
0x00001390: fadd qword ptr [0x5d8b0000]; cld; leave; ret; 
0x00001819: hlt; add al, byte ptr [ebx + 0x7e31f47d]; mov cl, 0x90; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x000011cb: hlt; mov ebx, dword ptr [esp]; ret; 
0x0000181d: hlt; xor dword ptr [esi - 0x4f], edi; nop; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x000018c7: idiv edi; inc dword ptr [ebx - 0x137cef3c]; add al, 0x6a; add cl, byte ptr [ebp - 0x4000b7b]; call dword ptr [eax + 0x6a]; 
0x00001209: in al, dx; adc al, 0x51; call eax; 
0x00001209: in al, dx; adc al, 0x51; call eax; add esp, 0x10; leave; ret; 
0x000017bc: in al, dx; adc al, 0xe8; or eax, 0x81fffffa; ret; 
0x00001328: in al, dx; add al, 0x6a; add byte ptr [ebp - 0x977b], cl; call dword ptr [eax + 0x6a]; 
0x000018ce: in al, dx; add al, 0x6a; add cl, byte ptr [ebp - 0x4000b7b]; call dword ptr [eax + 0x6a]; 
0x000018bc: in al, dx; or al, 0x8d; and dword ptr [ecx], 0xffffffff; call dword ptr [eax - 0x18]; 
0x00001006: in al, dx; or al, ch; ret; 
0x00001259: in al, dx; or byte ptr [eax + 0x51], dl; call edx; 
0x000013ec: in al, dx; or byte ptr [ebp - 0x100b7b], cl; call dword ptr [eax - 0x73]; 
0x000013d4: in al, dx; or byte ptr [ebp - 0x200b7b], cl; call dword ptr [eax - 1]; 
0x000014e4: in al, dx; or byte ptr [ebp - 0xe77b], cl; call dword ptr [eax - 0x73]; 
0x00001207: in eax, 0x83; in al, dx; adc al, 0x51; call eax; 
0x000018c9: inc dword ptr [ebx - 0x137cef3c]; add al, 0x6a; add cl, byte ptr [ebp - 0x4000b7b]; call dword ptr [eax + 0x6a]; 
0x000013e7: inc dword ptr [ebx - 0x137cef3c]; or byte ptr [ebp - 0x100b7b], cl; call dword ptr [eax - 0x73]; 
0x000014df: inc dword ptr [ebx - 0x137cef3c]; or byte ptr [ebp - 0xe77b], cl; call dword ptr [eax - 0x73]; 
0x000013c0: inc ebp; or byte ptr [ecx - 0x201b7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0000142a: inc edx; add eax, 0x5d8b0000; cld; leave; ret; 
0x000012ae: inc esi; or dword ptr [eax + 0x1000000], 0xffffff8b; pop ebp; cld; leave; ret; 
0x0000100f: jae 0x1040; add byte ptr [eax], al; mov eax, dword ptr [ebx + 0x6c]; test eax, eax; je 0x101f; call eax; 
0x0000101b: je 0x101f; call eax; 
0x0000101b: je 0x101f; call eax; add esp, 8; pop ebx; ret; 
0x00001203: je 0x1218; push ebp; mov ebp, esp; sub esp, 0x14; push ecx; call eax; 
0x00001256: je 0x1262; sub esp, 8; push eax; push ecx; call edx; 
0x0000138d: je 0x1394; call 0x1970; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x00001427: je 0x142e; call 0x1970; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x00001647: je 0x164e; call 0x1970; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x000017ab: je 0x17b2; call 0x1970; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x0000181c: jge 0x1812; xor dword ptr [esi - 0x4f], edi; nop; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x0000181f: jle 0x17d2; nop; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x000013c7: jmp dword ptr [ebp - 0x5f]; 
0x00001040: jmp dword ptr [ebx + 0xc]; 
0x00001036: jmp dword ptr [ebx + 8]; 
0x00001967: jmp dword ptr [esi - 0x70]; 
0x000011c2: js 0x11c4; add byte ptr [eax], al; call 0x1050; hlt; mov ebx, dword ptr [esp]; ret; 
0x00001213: lea esi, [esi]; nop; ret; 
0x00001211: leave; ret; 
0x00001020: les ecx, ptr [eax]; pop ebx; ret; 
0x000012a8: les edx, ptr [eax]; call 0x11e0; mov byte ptr [ebx + 0x88], 1; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x0000120f: les edx, ptr [eax]; leave; ret; 
0x00001260: les edx, ptr [eax]; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x000018c1: loope 0x18c2; call dword ptr [eax - 0x18]; 
0x00001957: loope 0x1958; call dword ptr [eax - 0x18]; 
0x000012af: mov byte ptr [ebx + 0x88], 1; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x00001820: mov cl, 0x90; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x00001037: mov dword ptr [8], eax; add byte ptr [eax], al; add byte ptr [eax], al; jmp dword ptr [ebx + 0xc]; 
0x00001013: mov eax, dword ptr [ebx + 0x6c]; test eax, eax; je 0x101f; call eax; 
0x00001206: mov ebp, esp; sub esp, 0x14; push ecx; call eax; 
0x00001262: mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x000011cc: mov ebx, dword ptr [esp]; ret; 
0x000012c9: mov edx, dword ptr [esp]; ret; 
0x000017ae: mov esi, 0x8b000001; pop ebp; cld; leave; ret; 
0x00001821: nop; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x00001217: nop; ret; 
0x000018bd: or al, 0x8d; and dword ptr [ecx], 0xffffffff; call dword ptr [eax - 0x18]; 
0x00001257: or al, byte ptr [ebx + 0x515008ec]; call edx; 
0x00001007: or al, ch; ret; 
0x0000125a: or byte ptr [eax + 0x51], dl; call edx; 
0x00001038: or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; jmp dword ptr [ebx + 0xc]; 
0x000013ed: or byte ptr [ebp - 0x100b7b], cl; call dword ptr [eax - 0x73]; 
0x000013d5: or byte ptr [ebp - 0x200b7b], cl; call dword ptr [eax - 1]; 
0x000014e5: or byte ptr [ebp - 0xe77b], cl; call dword ptr [eax - 0x73]; 
0x000013c1: or byte ptr [ecx - 0x201b7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000012b0: or dword ptr [eax + 0x1000000], 0xffffff8b; pop ebp; cld; leave; ret; 
0x000017bf: or eax, 0x81fffffa; ret; 
0x00001263: pop ebp; cld; leave; ret; 
0x00001022: pop ebx; ret; 
0x00001323: push 0x83ffffff; in al, dx; add al, 0x6a; add byte ptr [ebp - 0x977b], cl; call dword ptr [eax + 0x6a]; 
0x000011c0: push dword ptr [ebx + 0x78]; call 0x1050; hlt; mov ebx, dword ptr [esp]; ret; 
0x00001030: push dword ptr [ebx + 4]; jmp dword ptr [ebx + 8]; 
0x0000125b: push eax; push ecx; call edx; 
0x00001205: push ebp; mov ebp, esp; sub esp, 0x14; push ecx; call eax; 
0x0000120b: push ecx; call eax; 
0x0000120b: push ecx; call eax; add esp, 0x10; leave; ret; 
0x0000125c: push ecx; call edx; 
0x0000125c: push ecx; call edx; add esp, 0x10; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x000011bf: push esi; push dword ptr [ebx + 0x78]; call 0x1050; hlt; mov ebx, dword ptr [esp]; ret; 
0x000011ca: push esp; mov ebx, dword ptr [esp]; ret; 
0x00001226: ret 0x2d5b; 
0x000011e6: ret 0x2d9b; 
0x000015b7: ret 0x524c; 
0x000015a5: ret 0x858b; 
0x00001009: ret; 
0x0000125e: rol byte ptr [ebx + 0x5d8b10c4], cl; cld; leave; ret; 
0x00001202: sal byte ptr [ebx + edx + 0x55], 0x89; in eax, 0x83; in al, dx; adc al, 0x51; call eax; 
0x0000101a: sal byte ptr [edx + eax - 1], 0xd0; add esp, 8; pop ebx; ret; 
0x00001255: sal byte ptr [edx + ecx - 0x7d], cl; in al, dx; or byte ptr [eax + 0x51], dl; call edx; 
0x000011cd: sbb al, 0x24; ret; 
0x000018d6: sti; call dword ptr [eax + 0x6a]; 
0x00001872: sti; call dword ptr [eax - 0x18]; 
0x00001014: sub dword ptr [eax + eax], 0; test eax, eax; je 0x101f; call eax; 
0x00001208: sub esp, 0x14; push ecx; call eax; 
0x00001208: sub esp, 0x14; push ecx; call eax; add esp, 0x10; leave; ret; 
0x00001258: sub esp, 8; push eax; push ecx; call edx; 
0x00001019: test eax, eax; je 0x101f; call eax; 
0x00001019: test eax, eax; je 0x101f; call eax; add esp, 8; pop ebx; ret; 
0x00001254: test edx, edx; je 0x1262; sub esp, 8; push eax; push ecx; call edx; 
0x0000181e: xor dword ptr [esi - 0x4f], edi; nop; mov ebx, dword ptr [ebp - 4]; leave; ret; 

171 gadgets found
